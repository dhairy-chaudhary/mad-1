openapi: 3.0.0
info:
  title: "Grocery store API"
  description: "An API for product management"
  version: "1.0.0"
components:
        securitySchemes:
          BasicAuth:
            type: http
            scheme: basic

servers:
- url: localhost:5000/api
  description: testing server

paths:
  /category:
    get:
      summary: Returns a list of categories.
      description: Contains {id, name, details} of categories.
      responses:
        '200': 
          description: A JSON array of category
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 4
                  name:
                    type: string
                    example: Fast food & Beverage
                  details:
                    type: string
                    example: 
        '404': 
          description: Not found any category
        '500':
          description: Internal server error
  /section/{category}:
    get:
      summary: Returns a list of all section in that category.
      parameters:
        - in: path
          name: category
          required: true
          schema:
            type: string
            example: Vegetables & Fruits
      responses:
          '200':
            description: A list of sections
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 4
                    section_name:
                      type: string
                      example: Fruits
                    category:
                      type: string
                      example: Vegetables & Fruits
                    image:
                      type: string
                      example: /img/section/fruits.png
          '404':
            description: Section with the specified category was not found.
          '500':
            description: Internal Server Error
  /section:
    post:
      summary: Create a new section under some category.
      security:
      - BasicAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                section_name:
                  type: string
                  example: cake
                category:
                  type: string
                  example: Fast food & Beverage
                image: 
                  type: string
                  format: binary
                  description: can be left blank
                  example: '/image/section/cake.png'
      responses:
        '201': 
          description: returns data that is created and 201 code
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The section ID.
                  section_name:
                    type: string
                    description: The section name.
                  category:
                    type: string
                    description: category name.
                  image:
                    type: string
                    description: image link.
        '400':
          description: missing information
        '409':
          description: already exists
        '500':
          description: internal server error
    delete:
      security:
      - BasicAuth: []
      summary: delete a section by id, only admin
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
            example: 3
            description: ID of section to delete
      responses:
        '200':
          description: Deleted
    put:
      security:
      -  BasicAuth: []
      summary: Update a section with ID
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
            example: 5
            description: ID of section to update
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                section_name:
                  type: string
                  example: cake
                category:
                  type: string
                  example: Fast food & Beverage
                image: 
                  type: string
                  format: binary
                  description: can be left blank
                  example: '/image/section/cake.png'
      responses:
        '200':
          description: Updated
        '400':
          description: Missing information
        '500':
          description: Internal Server Error
  /product/{category}:
    get:
      summary: Get all product under some category or section
      description: can give only category in path or an addition query with sec=<section_name>
      parameters:
        - in: path
          name: category
          required: true
          schema:
            type: string
            example: Vegetables & Fruits
        - in: query
          name: sec
          required: false
          schema:
            type: string
            example: Vegetables
      responses:
        '200':
          description: OK
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 1
                    product_name:
                      type: string
                      example: Patato
                    section_name:
                      type: string
                      example: Vegetables
                    category:
                      type: string
                      example: Vegetables & Fruits
                    image:
                      type: string
                      example: /img/section/fruits.png
                    details:
                      type: string
                      example: Fresh and organic 
                    price:
                      type: number
                      example: 25
                    unit:
                      type: string
                      example: RS/kg
                    stock:
                      type: number
                      example: 500
                    expiry:
                      type: string
                      example: 2023-08-24
        '404':
          description: Not Found
        '500':
          description: Internal server Error
  /product:
    post:
      security:
      - BasicAuth: []
      summary: Create a new product
      requestBody:
        required: true
        content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1
                  product_name:
                    type: string
                    example: Patato
                  section_name:
                    type: string
                    example: Vegetables
                  category:
                    type: string
                    example: Vegetables & Fruits
                  image:
                    type: string
                    format: binary
                    example: /img/section/fruits.png
                  details:
                    type: string
                    example: Fresh and organic 
                  price:
                    type: number
                    example: 25
                  unit:
                    type: string
                    example: RS/kg
                  stock:
                    type: number
                    example: 500
                  expiry:
                    type: string
                    example: 2023-08-24
      responses:
        '201':
         description: Created
         content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 1
                    product_name:
                      type: string
                      example: Patato
                    section_name:
                      type: string
                      example: Vegetables
                    category:
                      type: string
                      example: Vegetables & Fruits
                    image:
                      type: string
                      example: /img/section/fruits.png
                    details:
                      type: string
                      example: Fresh and organic 
                    price:
                      type: number
                      example: 25
                    unit:
                      type: string
                      example: RS/kg
                    stock:
                      type: number
                      example: 500
                    expiry:
                      type: string
                      example: 2023-08-24
        '400':
          description: missing information
        '409':
          description: already exist
        '500':
          description: Internal server error
    delete:
      security:
      - BasicAuth: []
      summary: delete product by Id, can only done by admin
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
            example: 6
            description: Id of product to delete
      responses:
        '200':
          description: deleted
        '404':
          description: not found
        '500':
          description: server error
    put:
      security:
      - BasicAuth: []
      summary: Update a product by id
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
            example: 3
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
                product_name:
                  type: string
                  example: Patato
                section_name:
                  type: string
                  example: Vegetables
                category:
                  type: string
                  example: Vegetables & Fruits
                image:
                  type: string
                  format: binary
                  example: /img/section/fruits.png
                details:
                  type: string
                  example: Fresh and organic 
                price:
                  type: number
                  example: 25
                unit:
                  type: string
                  example: RS/kg
                stock:
                  type: number
                  example: 500
                expiry:
                  type: string
                  example: 2023-08-24
      responses:
        '200':
          description: Updated
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 1
                    product_name:
                      type: string
                      example: Patato
                    section_name:
                      type: string
                      example: Vegetables
                    category:
                      type: string
                      example: Vegetables & Fruits
                    image:
                      type: string
                      example: /img/section/fruits.png
                    details:
                      type: string
                      example: Fresh and organic 
                    price:
                      type: number
                      example: 25
                    unit:
                      type: string
                      example: RS/kg
                    stock:
                      type: number
                      example: 500
                    expiry:
                      type: string
                      example: 2023-08-24
        '400':
          description: Missing information
        '500':
          description: Internal Server Error